// This Antlr4 file was machine-generated by the BNF converter
lexer grammar bnfLexer;
// Predefined regular expressions in BNFC
fragment LETTER  : CAPITAL | SMALL ;
fragment CAPITAL : [A-Z\u00C0-\u00D6\u00D8-\u00DE] ;
fragment SMALL   : [a-z\u00DF-\u00F6\u00F8-\u00FF] ;
fragment DIGIT   : [0-9] ;
Surrogate_id_SYMB_0 : ':' ;
Surrogate_id_SYMB_1 : ';' ;
Surrogate_id_SYMB_2 : ',' ;
Surrogate_id_SYMB_3 : '.' ;
Surrogate_id_SYMB_4 : '::=' ;
Surrogate_id_SYMB_5 : '[' ;
Surrogate_id_SYMB_6 : ']' ;
Surrogate_id_SYMB_7 : '_' ;
Surrogate_id_SYMB_8 : '(' ;
Surrogate_id_SYMB_9 : ')' ;
Surrogate_id_SYMB_10 : '=' ;
Surrogate_id_SYMB_11 : '|' ;
Surrogate_id_SYMB_12 : '-' ;
Surrogate_id_SYMB_13 : '*' ;
Surrogate_id_SYMB_14 : '+' ;
Surrogate_id_SYMB_15 : '?' ;
Surrogate_id_SYMB_16 : '{' ;
Surrogate_id_SYMB_17 : '}' ;
Surrogate_id_SYMB_18 : 'char' ;
Surrogate_id_SYMB_19 : 'coercions' ;
Surrogate_id_SYMB_20 : 'comment' ;
Surrogate_id_SYMB_21 : 'define' ;
Surrogate_id_SYMB_22 : 'delimiters' ;
Surrogate_id_SYMB_23 : 'digit' ;
Surrogate_id_SYMB_24 : 'entrypoints' ;
Surrogate_id_SYMB_25 : 'eps' ;
Surrogate_id_SYMB_26 : 'internal' ;
Surrogate_id_SYMB_27 : 'layout' ;
Surrogate_id_SYMB_28 : 'letter' ;
Surrogate_id_SYMB_29 : 'lower' ;
Surrogate_id_SYMB_30 : 'nonempty' ;
Surrogate_id_SYMB_31 : 'position' ;
Surrogate_id_SYMB_32 : 'rules' ;
Surrogate_id_SYMB_33 : 'separator' ;
Surrogate_id_SYMB_34 : 'stop' ;
Surrogate_id_SYMB_35 : 'terminator' ;
Surrogate_id_SYMB_36 : 'token' ;
Surrogate_id_SYMB_37 : 'toplevel' ;
Surrogate_id_SYMB_38 : 'upper' ;
Surrogate_id_SYMB_39 : 'views' ;
COMMENT_antlr_builtin
: (
'--' ~[\r\n]* (('\r'? '\n')|EOF)
) -> skip;
MULTICOMMENT_antlr_builtin
: (
'{-' (.)*? '-}'
) -> skip;

Identifier : LETTER('_'|(DIGIT|LETTER))*;
// String token type
STRING : '"' -> more, mode(STRINGMODE);
CHAR : '\''   -> more, mode(CHARMODE);
// Double predefined token type
DOUBLE : DIGIT+ '.' DIGIT+ ('e' '-'? DIGIT+)?;
//Integer predefined token type
INTEGER : DIGIT+;

// Whitespace
WS : (' ' | '\r' | '\t' | '\n' | '\f')+ ->  skip;
// Escapable sequences
fragment
Escapable : ('"' | '\\' | 'n' | 't' | 'r' | 'f');
ErrorToken : . ;
mode STRESCAPE;
STRESCAPED : Escapable  -> more, popMode ;
mode STRINGMODE;
STRINGESC : '\\' -> more , pushMode(STRESCAPE);
STRINGEND : '"' ->  type(STRING), mode(DEFAULT_MODE);
STRINGTEXT : ~[\"\\] -> more;
mode CHARMODE;
CHARANY     :  ~[\'\\] -> more, mode(CHAREND);
CHARESC     :  '\\'  -> more, pushMode(CHAREND),pushMode(ESCAPE);
mode ESCAPE;
ESCAPED : (Escapable | '\'')  -> more, popMode ;
mode CHAREND;
CHARENDC     :  '\''  -> type(CHAR), mode(DEFAULT_MODE);
