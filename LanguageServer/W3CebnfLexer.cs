//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from W3CebnfLexer.g4 by ANTLR 4.9.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LanguageServer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.3")]
[System.CLSCompliant(false)]
public partial class W3CebnfLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PPEQ=1, Q=2, VP=3, M=4, P=5, S=6, OP=7, CP=8, CONSTRAINT=9, COMMENT=10, 
		HEX=11, STRING=12, SET=13, SYMBOL=14, WS=15;
	public const int
		OFF_CHANNEL=2;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN", "OFF_CHANNEL"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"PPEQ", "Q", "VP", "M", "P", "S", "OP", "CP", "CONSTRAINT", "COMMENT", 
		"HEX", "STRING", "SET", "SYMBOL", "WS", "Symbol", "Hex", "Ws"
	};


	public W3CebnfLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public W3CebnfLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'::='", "'?'", "'|'", "'-'", "'+'", "'*'", "'('", "')'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PPEQ", "Q", "VP", "M", "P", "S", "OP", "CP", "CONSTRAINT", "COMMENT", 
		"HEX", "STRING", "SET", "SYMBOL", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "W3CebnfLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static W3CebnfLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x11', '\x94', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\b', 
		'\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x5', 
		'\n', '<', '\n', '\n', '\x3', '\n', '\x3', '\n', '\x5', '\n', '@', '\n', 
		'\n', '\x3', '\n', '\x3', '\n', '\a', '\n', '\x44', '\n', '\n', '\f', 
		'\n', '\xE', '\n', 'G', '\v', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\a', 
		'\v', 'Q', '\n', '\v', '\f', '\v', '\xE', '\v', 'T', '\v', '\v', '\x3', 
		'\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', 
		'\x3', '\f', '\x3', '\r', '\x3', '\r', '\a', '\r', '_', '\n', '\r', '\f', 
		'\r', '\xE', '\r', '\x62', '\v', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\r', '\a', '\r', 'g', '\n', '\r', '\f', '\r', '\xE', '\r', 'j', '\v', 
		'\r', '\x3', '\r', '\x5', '\r', 'm', '\n', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x5', '\xE', 'q', '\n', '\xE', '\x3', '\xE', '\x3', '\xE', '\x6', 
		'\xE', 'u', '\n', '\xE', '\r', '\xE', '\xE', '\xE', 'v', '\x3', '\xE', 
		'\x3', '\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', '\a', '\x11', 
		'\x83', '\n', '\x11', '\f', '\x11', '\xE', '\x11', '\x86', '\v', '\x11', 
		'\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x6', '\x12', 
		'\x8C', '\n', '\x12', '\r', '\x12', '\xE', '\x12', '\x8D', '\x3', '\x13', 
		'\x6', '\x13', '\x91', '\n', '\x13', '\r', '\x13', '\xE', '\x13', '\x92', 
		'\a', '\x45', 'R', '`', 'h', 'v', '\x2', '\x14', '\x3', '\x3', '\x5', 
		'\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', 
		'\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', '\xE', 
		'\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x2', '#', '\x2', 
		'%', '\x2', '\x3', '\x2', '\x5', '\a', '\x2', '/', '\x30', '\x32', ';', 
		'\x43', '\\', '\x61', '\x61', '\x63', '|', '\x5', '\x2', '\x32', ';', 
		'\x43', 'H', '\x63', 'h', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x2', '\x9D', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x3', '\'', '\x3', '\x2', '\x2', '\x2', '\x5', '+', '\x3', '\x2', '\x2', 
		'\x2', '\a', '-', '\x3', '\x2', '\x2', '\x2', '\t', '/', '\x3', '\x2', 
		'\x2', '\x2', '\v', '\x31', '\x3', '\x2', '\x2', '\x2', '\r', '\x33', 
		'\x3', '\x2', '\x2', '\x2', '\xF', '\x35', '\x3', '\x2', '\x2', '\x2', 
		'\x11', '\x37', '\x3', '\x2', '\x2', '\x2', '\x13', '\x39', '\x3', '\x2', 
		'\x2', '\x2', '\x15', 'L', '\x3', '\x2', '\x2', '\x2', '\x17', 'Z', '\x3', 
		'\x2', '\x2', '\x2', '\x19', 'l', '\x3', '\x2', '\x2', '\x2', '\x1B', 
		'n', '\x3', '\x2', '\x2', '\x2', '\x1D', 'z', '\x3', '\x2', '\x2', '\x2', 
		'\x1F', '|', '\x3', '\x2', '\x2', '\x2', '!', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '#', '\x87', '\x3', '\x2', '\x2', '\x2', '%', '\x90', '\x3', '\x2', 
		'\x2', '\x2', '\'', '(', '\a', '<', '\x2', '\x2', '(', ')', '\a', '<', 
		'\x2', '\x2', ')', '*', '\a', '?', '\x2', '\x2', '*', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '+', ',', '\a', '\x41', '\x2', '\x2', ',', '\x6', '\x3', 
		'\x2', '\x2', '\x2', '-', '.', '\a', '~', '\x2', '\x2', '.', '\b', '\x3', 
		'\x2', '\x2', '\x2', '/', '\x30', '\a', '/', '\x2', '\x2', '\x30', '\n', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\x32', '\a', '-', '\x2', '\x2', '\x32', 
		'\f', '\x3', '\x2', '\x2', '\x2', '\x33', '\x34', '\a', ',', '\x2', '\x2', 
		'\x34', '\xE', '\x3', '\x2', '\x2', '\x2', '\x35', '\x36', '\a', '*', 
		'\x2', '\x2', '\x36', '\x10', '\x3', '\x2', '\x2', '\x2', '\x37', '\x38', 
		'\a', '+', '\x2', '\x2', '\x38', '\x12', '\x3', '\x2', '\x2', '\x2', '\x39', 
		';', '\a', ']', '\x2', '\x2', ':', '<', '\x5', '%', '\x13', '\x2', ';', 
		':', '\x3', '\x2', '\x2', '\x2', ';', '<', '\x3', '\x2', '\x2', '\x2', 
		'<', '=', '\x3', '\x2', '\x2', '\x2', '=', '?', '\x5', '!', '\x11', '\x2', 
		'>', '@', '\x5', '%', '\x13', '\x2', '?', '>', '\x3', '\x2', '\x2', '\x2', 
		'?', '@', '\x3', '\x2', '\x2', '\x2', '@', '\x41', '\x3', '\x2', '\x2', 
		'\x2', '\x41', '\x45', '\a', '<', '\x2', '\x2', '\x42', '\x44', '\v', 
		'\x2', '\x2', '\x2', '\x43', '\x42', '\x3', '\x2', '\x2', '\x2', '\x44', 
		'G', '\x3', '\x2', '\x2', '\x2', '\x45', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x45', '\x43', '\x3', '\x2', '\x2', '\x2', '\x46', 'H', '\x3', 
		'\x2', '\x2', '\x2', 'G', '\x45', '\x3', '\x2', '\x2', '\x2', 'H', 'I', 
		'\a', '_', '\x2', '\x2', 'I', 'J', '\x3', '\x2', '\x2', '\x2', 'J', 'K', 
		'\b', '\n', '\x2', '\x2', 'K', '\x14', '\x3', '\x2', '\x2', '\x2', 'L', 
		'M', '\a', '\x31', '\x2', '\x2', 'M', 'N', '\a', ',', '\x2', '\x2', 'N', 
		'R', '\x3', '\x2', '\x2', '\x2', 'O', 'Q', '\v', '\x2', '\x2', '\x2', 
		'P', 'O', '\x3', '\x2', '\x2', '\x2', 'Q', 'T', '\x3', '\x2', '\x2', '\x2', 
		'R', 'S', '\x3', '\x2', '\x2', '\x2', 'R', 'P', '\x3', '\x2', '\x2', '\x2', 
		'S', 'U', '\x3', '\x2', '\x2', '\x2', 'T', 'R', '\x3', '\x2', '\x2', '\x2', 
		'U', 'V', '\a', ',', '\x2', '\x2', 'V', 'W', '\a', '\x31', '\x2', '\x2', 
		'W', 'X', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\b', '\v', '\x2', '\x2', 
		'Y', '\x16', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\x5', '#', '\x12', 
		'\x2', '[', '\x18', '\x3', '\x2', '\x2', '\x2', '\\', '`', '\a', '$', 
		'\x2', '\x2', ']', '_', '\v', '\x2', '\x2', '\x2', '^', ']', '\x3', '\x2', 
		'\x2', '\x2', '_', '\x62', '\x3', '\x2', '\x2', '\x2', '`', '\x61', '\x3', 
		'\x2', '\x2', '\x2', '`', '^', '\x3', '\x2', '\x2', '\x2', '\x61', '\x63', 
		'\x3', '\x2', '\x2', '\x2', '\x62', '`', '\x3', '\x2', '\x2', '\x2', '\x63', 
		'm', '\a', '$', '\x2', '\x2', '\x64', 'h', '\a', ')', '\x2', '\x2', '\x65', 
		'g', '\v', '\x2', '\x2', '\x2', '\x66', '\x65', '\x3', '\x2', '\x2', '\x2', 
		'g', 'j', '\x3', '\x2', '\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 
		'h', '\x66', '\x3', '\x2', '\x2', '\x2', 'i', 'k', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'h', '\x3', '\x2', '\x2', '\x2', 'k', 'm', '\a', ')', '\x2', 
		'\x2', 'l', '\\', '\x3', '\x2', '\x2', '\x2', 'l', '\x64', '\x3', '\x2', 
		'\x2', '\x2', 'm', '\x1A', '\x3', '\x2', '\x2', '\x2', 'n', 'p', '\a', 
		']', '\x2', '\x2', 'o', 'q', '\a', '`', '\x2', '\x2', 'p', 'o', '\x3', 
		'\x2', '\x2', '\x2', 'p', 'q', '\x3', '\x2', '\x2', '\x2', 'q', 't', '\x3', 
		'\x2', '\x2', '\x2', 'r', 'u', '\x5', '#', '\x12', '\x2', 's', 'u', '\v', 
		'\x2', '\x2', '\x2', 't', 'r', '\x3', '\x2', '\x2', '\x2', 't', 's', '\x3', 
		'\x2', '\x2', '\x2', 'u', 'v', '\x3', '\x2', '\x2', '\x2', 'v', 'w', '\x3', 
		'\x2', '\x2', '\x2', 'v', 't', '\x3', '\x2', '\x2', '\x2', 'w', 'x', '\x3', 
		'\x2', '\x2', '\x2', 'x', 'y', '\a', '_', '\x2', '\x2', 'y', '\x1C', '\x3', 
		'\x2', '\x2', '\x2', 'z', '{', '\x5', '!', '\x11', '\x2', '{', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', '|', '}', '\x5', '%', '\x13', '\x2', '}', 
		'~', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\b', '\x10', '\x2', '\x2', 
		'\x7F', ' ', '\x3', '\x2', '\x2', '\x2', '\x80', '\x84', '\t', '\x2', 
		'\x2', '\x2', '\x81', '\x83', '\t', '\x2', '\x2', '\x2', '\x82', '\x81', 
		'\x3', '\x2', '\x2', '\x2', '\x83', '\x86', '\x3', '\x2', '\x2', '\x2', 
		'\x84', '\x82', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\x3', '\x2', 
		'\x2', '\x2', '\x85', '\"', '\x3', '\x2', '\x2', '\x2', '\x86', '\x84', 
		'\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\a', '%', '\x2', '\x2', '\x88', 
		'\x89', '\a', 'z', '\x2', '\x2', '\x89', '\x8B', '\x3', '\x2', '\x2', 
		'\x2', '\x8A', '\x8C', '\t', '\x3', '\x2', '\x2', '\x8B', '\x8A', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x8D', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8B', '\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\x3', '\x2', '\x2', 
		'\x2', '\x8E', '$', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x91', '\t', 
		'\x4', '\x2', '\x2', '\x90', '\x8F', '\x3', '\x2', '\x2', '\x2', '\x91', 
		'\x92', '\x3', '\x2', '\x2', '\x2', '\x92', '\x90', '\x3', '\x2', '\x2', 
		'\x2', '\x92', '\x93', '\x3', '\x2', '\x2', '\x2', '\x93', '&', '\x3', 
		'\x2', '\x2', '\x2', '\x10', '\x2', ';', '?', '\x45', 'R', '`', 'h', 'l', 
		'p', 't', 'v', '\x84', '\x8D', '\x92', '\x3', '\x2', '\x4', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace LanguageServer
